import{t as u,a as d}from"./woIyr73P.js";import"./CYm51p4s.js";import{s as n,P as m,c as t,b as p,n as f}from"./BfQri65O.js";import{h as o}from"./yyGB2fVy.js";const h={title:"How to add forms to your Gridsome site with Netlify forms",description:"Netlify offers some sophisticated features to make static site form submissions a breeze.",date:"2019-11-04T00:00:00.000Z",published:!0},{title:j,description:x,date:D,published:_}=h;var g=u('<h1 id="how-to-add-forms-to-your-gridsome-site-with-netlify-forms">How to add forms to your Gridsome site with Netlify forms</h1> <p>In order to implement the form functionality we need to start by adding the form to our template tag:</p> <pre class="language-js"><!></pre> <p>We have also included a honeypot input that will lure bots that are trying to send us spam, into filling out a special hidden field that will be caught by Netlify and automatically being rejected.</p> <p>Next step is to add our `formData` variable that will hold our data that will be sent to Netlify, this is binded to our inputs to automatically update `formData` when the input is changed.</p> <pre class="language-js"><!></pre> <p>Last step is to add our submit handler to send the data to Netlify. This is done by listening to the form submit action and using fetch to post the data in `formData`. We also have a encode method that will make sure our data is properly formatted when we post it.</p> <p>In this example shown below we are redirecting the user to the route `/success` if the post was successful, this can be changed into any action you want. But in this case you need to make sure you have a page setup on that route to present a success message for the user.</p> <pre class="language-js"><!></pre> <p>Read more: <a href="https://www.netlify.com/docs/form-handling/" title="https://www.netlify.com/docs/form-handling/" rel="nofollow">https://www.netlify.com/docs/form-handling/</a></p>',1);function N(c){var e=g(),s=n(m(e),4),l=t(s);o(l,()=>`<code class="language-js">    <span class="token operator">&lt;</span>form
        name<span class="token operator">=</span><span class="token string">"contact"</span>
        method<span class="token operator">=</span><span class="token string">"post"</span>
        v<span class="token operator">-</span>on<span class="token operator">:</span>submit<span class="token punctuation">.</span>prevent<span class="token operator">=</span><span class="token string">"handleSubmit"</span>
        action<span class="token operator">=</span><span class="token string">"/success/"</span>
        data<span class="token operator">-</span>netlify<span class="token operator">=</span><span class="token string">"true"</span>
        data<span class="token operator">-</span>netlify<span class="token operator">-</span>honeypot<span class="token operator">=</span><span class="token string">"bot-field"</span>
      <span class="token operator">></span>
      <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"hidden"</span> name<span class="token operator">=</span><span class="token string">"form-name"</span> value<span class="token operator">=</span><span class="token string">"contact"</span> <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>p hidden<span class="token operator">></span>
        <span class="token operator">&lt;</span>label<span class="token operator">></span>
        	Donâ€™t fill <span class="token keyword">this</span> <span class="token literal-property property">out</span><span class="token operator">:</span> <span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"bot-field"</span> <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sender-info"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"name"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"label"</span> <span class="token operator">></span>Your name<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>
      <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"name"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"formData.name"</span> <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
        <span class="token operator">&lt;</span>div<span class="token operator">></span>
          <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"email"</span><span class="token operator">></span>Your email<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>
          <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"email"</span> name<span class="token operator">=</span><span class="token string">"email"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"formData.email"</span> <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>

      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"message-wrapper"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"message"</span><span class="token operator">></span>Message<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>
        <span class="token operator">&lt;</span>textarea name<span class="token operator">=</span><span class="token string">"message"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"formData.message"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>textarea<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">"submit"</span><span class="token operator">></span>Submit form<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span></code>`),p(s);var a=n(s,6),k=t(a);o(k,()=>`<code class="language-js">    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
      	<span class="token literal-property property">formData</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span></code>`),p(a);var r=n(a,6),i=t(r);o(i,()=>`<code class="language-js">    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token function">encode</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'='</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
      <span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token string-property property">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'application/x-www-form-urlencoded'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
          <span class="token string-property property">'form-name'</span><span class="token operator">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>formData<span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/success'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=></span> <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span></code>`),p(r),f(2),d(c,e)}export{N as default,h as metadata};
