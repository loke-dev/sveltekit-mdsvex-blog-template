import{t as nn,a as sn}from"./woIyr73P.js";import"./CYm51p4s.js";import{s as n,P as an,c as s,b as a,n as tn}from"./BfQri65O.js";import{h as t}from"./yyGB2fVy.js";const pn={title:"CSS Flexbox Layout Simplified: A Visual Guide for Beginners",description:"Master CSS Flexbox layout with this beginner-friendly guide. Learn how to create responsive layouts, align elements, and solve common layout problems with practical examples and visual explanations.",date:"2023-11-25T00:00:00.000Z",published:!0},{title:kn,description:rn,date:mn,published:gn}=pn;var en=nn('<h1 id="css-flexbox-layout-simplified-a-visual-guide-for-beginners">CSS Flexbox Layout Simplified: A Visual Guide for Beginners</h1> <h2 id="introduction">Introduction</h2> <p>If you’re new to web development, creating layouts that work across different screen sizes can feel overwhelming. CSS Flexbox is a powerful layout system that makes this task much easier. In this guide, I’ll break down Flexbox concepts with visual examples and practical solutions to common layout problems.</p> <h2 id="what-is-flexbox-and-why-should-you-use-it">What is Flexbox and Why Should You Use It?</h2> <p>Flexbox (Flexible Box Layout) is a CSS layout model designed to help you arrange elements within a container, even when their size is unknown or dynamic. Before Flexbox, creating certain layouts required complex CSS hacks or JavaScript.</p> <p>Benefits of using Flexbox:</p> <ul><li>Simplifies vertical centering</li> <li>Makes creating equal-height columns easy</li> <li>Provides flexible space distribution</li> <li>Allows reordering elements without changing HTML</li> <li>Works great for responsive designs</li></ul> <h2 id="getting-started-with-flexbox">Getting Started with Flexbox</h2> <p>To use Flexbox, you need a container element (parent) with one or more child elements:</p> <pre class="language-html"><!></pre> <p>Then, make the container a flex container:</p> <pre class="language-css"><!></pre> <p>That’s it! You’ve created your first Flexbox layout. By default, the items will align in a row and take up only as much space as they need.</p> <h2 id="the-two-axes-of-flexbox">The Two Axes of Flexbox</h2> <p>Understanding the two axes is crucial for mastering Flexbox:</p> <ol><li><strong>Main Axis</strong>: The primary axis along which flex items are placed (horizontal by default)</li> <li><strong>Cross Axis</strong>: Perpendicular to the main axis (vertical by default)</li></ol> <pre class="language-css"><!></pre> <h2 id="solving-common-layout-problems-with-flexbox">Solving Common Layout Problems with Flexbox</h2> <h3 id="problem-1-centering-elements-vertically-and-horizontally">Problem 1: Centering Elements Vertically and Horizontally</h3> <p>One of the most common layout challenges is centering content both horizontally and vertically. With Flexbox, it’s simple:</p> <pre class="language-css"><!></pre> <p>This creates a perfectly centered element regardless of its dimensions:</p> <pre class="language-html"><!></pre> <h3 id="problem-2-creating-a-navigation-bar">Problem 2: Creating a Navigation Bar</h3> <p>Navigation bars are perfect candidates for Flexbox:</p> <pre class="language-html"><!></pre> <pre class="language-css"><!></pre> <h3 id="problem-3-equal-height-columns">Problem 3: Equal Height Columns</h3> <p>Creating equal-height columns used to be a CSS nightmare. With Flexbox, it’s automatic:</p> <pre class="language-html"><!></pre> <pre class="language-css"><!></pre> <p>All cards will have the same height, regardless of content length.</p> <h3 id="problem-4-responsive-layout-without-media-queries">Problem 4: Responsive Layout Without Media Queries</h3> <p>Flexbox can create layouts that adapt without media queries:</p> <pre class="language-html"><!></pre> <pre class="language-css"><!></pre> <p>This creates a grid where:</p> <ul><li>Items are at least 200px wide</li> <li>Items grow to fill available space</li> <li>Items wrap to the next line when they don’t fit</li></ul> <h3 id="problem-5-sticky-footer">Problem 5: Sticky Footer</h3> <p>Creating a footer that sticks to the bottom of the page when content is short:</p> <pre class="language-html"><!></pre> <pre class="language-css"><!></pre> <h2 id="key-flexbox-properties-explained">Key Flexbox Properties Explained</h2> <h3 id="for-the-container-parent">For the Container (Parent)</h3> <h4 id="flex-direction"><code>flex-direction</code></h4> <p>Controls the direction of the main axis:</p> <pre class="language-css"><!></pre> <h4 id="flex-wrap"><code>flex-wrap</code></h4> <p>Controls whether items wrap to new lines:</p> <pre class="language-css"><!></pre> <h4 id="justify-content"><code>justify-content</code></h4> <p>Aligns items along the main axis:</p> <pre class="language-css"><!></pre> <h4 id="align-items"><code>align-items</code></h4> <p>Aligns items along the cross axis:</p> <pre class="language-css"><!></pre> <h3 id="for-the-items-children">For the Items (Children)</h3> <h4 id="flex-grow"><code>flex-grow</code></h4> <p>Determines how much an item can grow:</p> <pre class="language-css"><!></pre> <h4 id="flex-shrink"><code>flex-shrink</code></h4> <p>Determines how much an item can shrink:</p> <pre class="language-css"><!></pre> <h4 id="flex-basis"><code>flex-basis</code></h4> <p>Sets the initial size of an item:</p> <pre class="language-css"><!></pre> <h4 id="flex-shorthand"><code>flex</code> (shorthand)</h4> <p>Combines grow, shrink, and basis:</p> <pre class="language-css"><!></pre> <h2 id="common-flexbox-mistakes-to-avoid">Common Flexbox Mistakes to Avoid</h2> <h3 id="mistake-1-forgetting-to-set-height-on-container">Mistake 1: Forgetting to Set Height on Container</h3> <p>Flexbox needs a defined height to center items vertically:</p> <pre class="language-css"><!></pre> <h3 id="mistake-2-using-wrong-axis-properties">Mistake 2: Using Wrong Axis Properties</h3> <p>Remember which axis you’re working with:</p> <pre class="language-css"><!></pre> <h3 id="mistake-3-not-accounting-for-flex-direction">Mistake 3: Not Accounting for Flex Direction</h3> <p>When you change flex-direction, the axes swap:</p> <pre class="language-css"><!></pre> <h2 id="browser-compatibility">Browser Compatibility</h2> <p>Flexbox is supported in all modern browsers. For older browsers (like IE10), you might need some vendor prefixes or a polyfill.</p> <h2 id="conclusion">Conclusion</h2> <p>Flexbox has revolutionized CSS layouts, making previously complex designs simple to implement. By understanding the core concepts of flex containers, flex items, and the two axes, you can solve most layout challenges with clean, maintainable CSS.</p> <p>Remember these key points:</p> <ul><li>Use <code>display: flex</code> to create a flex container</li> <li>Control alignment with <code>justify-content</code> and <code>align-items</code></li> <li>Use <code>flex</code> properties on children to control how they grow and shrink</li> <li>Think in terms of main axis and cross axis</li></ul> <p>With these Flexbox fundamentals, you’ll be able to create responsive, flexible layouts that work across devices without the headaches of older CSS techniques.</p> <h2 id="further-resources">Further Resources</h2> <ul><li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox" rel="nofollow">MDN Web Docs: Flexbox</a></li> <li><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" rel="nofollow">CSS-Tricks: A Complete Guide to Flexbox</a></li> <li><a href="https://flexboxfroggy.com/" rel="nofollow">Flexbox Froggy</a> - A game for learning Flexbox</li></ul>',1);function dn(I){var q=en(),p=n(an(q),18),O=s(p);t(O,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`),a(p);var e=n(p,4),T=s(e);t(T,()=>`<code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`),a(e);var o=n(e,10),z=s(o);t(z,()=>`<code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span> <span class="token comment">/* Default: main axis is horizontal */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span> <span class="token comment">/* Changes main axis to vertical */</span>
<span class="token punctuation">&#125;</span></code>`),a(o);var c=n(o,8),A=s(c);t(A,()=>`<code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* Centers along the main axis */</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* Centers along the cross axis */</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span> <span class="token comment">/* Give the container some height */</span>
<span class="token punctuation">&#125;</span></code>`),a(c);var l=n(c,4),j=s(l);t(j,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>centered-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>I'm centered!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`),a(l);var u=n(l,6),D=s(u);t(D,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>MySite<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav-links<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>About<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span></code>`),a(u);var i=n(u,2),M=s(i);t(M,()=>`<code class="language-css"><span class="token selector">.navbar</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span> <span class="token comment">/* Logo on left, links on right */</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 1rem 2rem<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token selector">.nav-links</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* Make the list items flex too */</span>
  <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">gap</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* Space between nav items */</span>
<span class="token punctuation">&#125;</span></code>`),a(i);var k=n(i,6),W=s(k);t(W,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>Card 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>This card has a small amount of content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>Card 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>This card has much more content. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam in dui mauris.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>Card 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Medium amount of content here.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`),a(k);var r=n(k,2),P=s(r);t(P,()=>`<code class="language-css"><span class="token selector">.card-container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">gap</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token selector">.card</span> <span class="token punctuation">&#123;</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/* Each card takes equal space */</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ddd<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`),a(r);var m=n(r,8),B=s(m);t(B,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flexible-grid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`),a(m);var g=n(m,2),L=s(g);t(L,()=>`<code class="language-css"><span class="token selector">.flexible-grid</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span> <span class="token comment">/* Allow items to wrap to next line */</span>
<span class="token punctuation">&#125;</span>

<span class="token selector">.grid-item</span> <span class="token punctuation">&#123;</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1 1 200px<span class="token punctuation">;</span> <span class="token comment">/* Grow, shrink, basis */</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #f0f0f0<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`),a(g);var d=n(g,10),G=s(d);t(G,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>Header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>Content (might be short)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>Footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code>`),a(d);var h=n(d,2),E=s(h);t(E,()=>`<code class="language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
  <span class="token property">min-height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span> <span class="token comment">/* Full viewport height */</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token selector">main</span> <span class="token punctuation">&#123;</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/* Takes up all available space */</span>
<span class="token punctuation">&#125;</span></code>`),a(h);var x=n(h,10),H=s(x);t(H,()=>`<code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span> <span class="token comment">/* Default: left to right */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row-reverse<span class="token punctuation">;</span> <span class="token comment">/* Right to left */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span> <span class="token comment">/* Top to bottom */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column-reverse<span class="token punctuation">;</span> <span class="token comment">/* Bottom to top */</span>
<span class="token punctuation">&#125;</span></code>`),a(x);var f=n(x,6),U=s(f);t(U,()=>`<code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span> <span class="token comment">/* Default: no wrapping */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span> <span class="token comment">/* Wrap to new lines */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap-reverse<span class="token punctuation">;</span> <span class="token comment">/* Wrap in reverse order */</span>
<span class="token punctuation">&#125;</span></code>`),a(f);var y=n(f,6),N=s(y);t(N,()=>`<code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span> <span class="token comment">/* Default: items at start */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span> <span class="token comment">/* Items at end */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* Items at center */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span> <span class="token comment">/* Equal space between items */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span> <span class="token comment">/* Equal space around items */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-evenly<span class="token punctuation">;</span> <span class="token comment">/* Equal space between and around */</span>
<span class="token punctuation">&#125;</span></code>`),a(y);var v=n(y,6),V=s(v);t(V,()=>`<code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> stretch<span class="token punctuation">;</span> <span class="token comment">/* Default: stretch to fill container */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span> <span class="token comment">/* Items at start of cross axis */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span> <span class="token comment">/* Items at end of cross axis */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* Items at center of cross axis */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span> <span class="token comment">/* Items aligned by text baseline */</span>
<span class="token punctuation">&#125;</span></code>`),a(v);var b=n(v,8),Y=s(b);t(Y,()=>`<code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">&#123;</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token comment">/* Default: don't grow */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/* Grow to fill available space */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token comment">/* Grow twice as much as items with flex-grow: 1 */</span>
<span class="token punctuation">&#125;</span></code>`),a(b);var w=n(b,6),J=s(w);t(J,()=>`<code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">&#123;</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/* Default: can shrink if needed */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token comment">/* Don't shrink */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token comment">/* Shrink twice as much as others */</span>
<span class="token punctuation">&#125;</span></code>`),a(w);var _=n(w,6),K=s(_);t(K,()=>`<code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">&#123;</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span> <span class="token comment">/* Default: size based on content */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token comment">/* Start at 200px before growing/shrinking */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span> <span class="token comment">/* Start at 50% of container */</span>
<span class="token punctuation">&#125;</span></code>`),a(_);var S=n(_,6),Q=s(S);t(Q,()=>`<code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">&#123;</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 0 1 auto<span class="token punctuation">;</span> <span class="token comment">/* Default: don't grow, can shrink, auto basis */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/* Same as flex: 1 1 0% - grow, shrink, zero basis */</span>
  <span class="token comment">/* OR */</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1 0 200px<span class="token punctuation">;</span> <span class="token comment">/* Grow, don't shrink, 200px basis */</span>
<span class="token punctuation">&#125;</span></code>`),a(S);var C=n(S,8),Z=s(C);t(Z,()=>`<code class="language-css"><span class="token comment">/* ❌ This won't center vertically */</span>
<span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">/* ✅ This will center vertically */</span>
<span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span> <span class="token comment">/* or 100vh, or any other height */</span>
<span class="token punctuation">&#125;</span></code>`),a(C);var F=n(C,6),X=s(F);t(X,()=>`<code class="language-css"><span class="token comment">/* ❌ Wrong property for horizontal centering */</span>
<span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* This centers vertically, not horizontally */</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">/* ✅ Correct property for horizontal centering */</span>
<span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* This centers horizontally */</span>
<span class="token punctuation">&#125;</span></code>`),a(F);var R=n(F,6),$=s(R);t($,()=>`<code class="language-css"><span class="token comment">/* ❌ This won't work as expected */</span>
<span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* This now centers vertically, not horizontally */</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">/* ✅ Adjusted for column direction */</span>
<span class="token selector">.container</span> <span class="token punctuation">&#123;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* This centers horizontally in column layout */</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* This centers vertically in column layout */</span>
<span class="token punctuation">&#125;</span></code>`),a(R),tn(18),sn(I,q)}export{dn as default,pn as metadata};
